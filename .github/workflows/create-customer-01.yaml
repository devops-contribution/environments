name: Create Cusomer-01

on:
  workflow_run:
    workflows: ["Validate Customer-01"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  wait-for-approval:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    environment: dev # Approval is needed for all envs.

    steps:
      - name: Awaiting manual approval
        run: echo "Approval granted, proceeding to apply..."

  apply-changes:
    runs-on: ubuntu-latest
    needs: wait-for-approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      #- name: Configure AWS creds
      #  uses: aws-actions/configure-aws-credentials@v4
      #  with:
      #    role-to-assume: arn:aws:iam::014337110715:role/github-actions-role
      #    aws-region: us-west-2
   
      - name: Authenticate AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Apply changes
        env:
          TF_VAR_public_key: ${{ secrets.EKS_PUBLIC_KEY }}
        run: |
          terraform -chdir=env/dev/us-west-2/customer-01 init
          terraform -chdir=env/dev/us-west-2/customer-01 apply -auto-approve


      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
      
      - name: Update KubeConfig
        run: aws eks update-kubeconfig --region us-west-2 --name terraform-aws-eks
    
      - name: Deploy ArgoCD
        run: |
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}'
        continue_on_error: true
 
      - name: Checkout K8s-apps Repo
        uses: actions/checkout@v4
        with:
          repository: devops-contribution/k8s-apps
      
      - name: Delpoy Core Components
        run: |
          kubectl apply -f core/argo/projects/core-components-project.yaml
          kubectl apply -f core/argo/projects/workloads-project.yaml
          kubectl apply -f core/argo/applications/core-components-applicationset.yaml
          kubectl apply -f core/argo/applications/workloads-applicationset.yaml
        continue_on_error: true
